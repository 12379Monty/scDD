{
    "collab_server" : "",
    "contents" : "% Generated by roxygen2: do not edit by hand\n% Please edit documentation in R/scDD.R\n\\name{scDD}\n\\alias{scDD}\n\\title{scDD}\n\\usage{\nscDD(SCdat, prior_param = list(alpha = 0.1, mu0 = 0, s0 = 0.01, a0 = 0.01, b0\n  = 0.01), permutations = 0, testZeroes = TRUE, adjust.perms = FALSE,\n  param = bpparam(), parallelBy = c(\"Genes\", \"Permutations\"),\n  condition = \"condition\", min.size = 3, min.nonzero = NULL)\n}\n\\arguments{\n\\item{SCdat}{An object of class \\code{SummarizedExperiment} that contains \nnormalized single-cell expression and metadata. The \\code{assays} \n  slot contains a named list of matrices, where the normalized counts are \n  housed in the one named \\code{\"NormCounts\"}.  This matrix should have one\n   row for each gene and one sample for each column.  \n  The \\code{colData} slot should contain a data.frame with one row per \n  sample and columns that contain metadata for each sample.  This data.frame\n  should contain a variable that represents biological condition, which is \n  in the form of numeric values (either 1 or 2) that indicates which \n  condition each sample belongs to (in the same order as the columns of \n  \\code{NormCounts}).  Optional additional metadata about each cell can also\n  be contained in this data.frame, and additional information about the \n  experiment can be contained in the \\code{metadata} slot as a list.}\n\n\\item{prior_param}{A list of prior parameter values to be used when modeling\neach gene as a mixture of DP normals.  Default \n  values are given that specify a vague prior distribution on the \n  cluster-specific means and variances.}\n\n\\item{permutations}{The number of permutations to be used in calculating \nempirical p-values.  If set to zero (default),\n  the full Bayes Factor permutation test will not be performed.  Instead, \n  a fast procedure to identify the genes with significantly different\n  expression distributions will be performed using the nonparametric \n  Kolmogorov-Smirnov test, which tests the null hypothesis that \n  the samples are generated from the same continuous distribution.  \n  This test will yield\n  slightly lower power than the full permutation testing framework \n  (this effect is more pronounced at smaller sample \n  sizes, and is more pronounced in the DB category), but is orders of \n  magnitude faster.  This option\n  is recommended when compute resources are limited.  The remaining \n  steps of the scDD framework will remain unchanged\n  (namely, categorizing the significant DD genes into patterns that \n  represent the major distributional changes, \n  as well as the ability to visualize the results with violin plots \n  using the \\code{sideViolin} function).}\n\n\\item{testZeroes}{Logical indicating whether or not to test for a \ndifference in the proportion of zeroes}\n\n\\item{adjust.perms}{Logical indicating whether or not to adjust the \npermutation tests for the sample\n  detection rate (proportion of nonzero values).  If true, the \n  residuals of a linear model adjusted for \n  detection rate are permuted, and new fitted values are \n  obtained using these residuals.}\n\n\\item{param}{a \\code{MulticoreParam} or \\code{SnowParam} object of \nthe \\code{BiocParallel}\npackage that defines a parallel backend.  The default option is \n\\code{BiocParallel::bpparam()} which will automatically creates a cluster \nappropriate for \nthe operating system.  Alternatively, the user can specify the number\nof cores they wish to use by first creating the corresponding \n\\code{MulticoreParam} (for Linux-like OS) or \\code{SnowParam} (for Windows)\nobject, and then passing it into the \\code{scDD}\nfunction. This could be done to specify a parallel backend on a Linux-like\nOS with, say 12 \ncores by setting \\code{param=BiocParallel::MulticoreParam(workers=12)}}\n\n\\item{parallelBy}{For the permutation test (if invoked), the manner in \nwhich to parallelize.  The default option\n is \\code{\"Genes\"} which will spawn processes that divide up the genes \n across all cores defined in \\code{param} cores, and then loop through the \n permutations. \n The alternate option is \\code{\"Permutations\"} which\n loop through each gene and spawn processes that divide up the permutations \n across all cores defined in \\code{param}.  \n The default option is recommended when analyzing more genes than the number\n  of permutations.}\n\n\\item{condition}{A character object that contains the name of the column in \n\\code{colData} that represents \n the biological group or condition of interest (e.g. treatment versus \n control).  Note that this variable should only contain two \n possible values since \\code{scDD} can currently only handle two-group \n comparisons.  The default option assumes that there\n is a column named \"condition\" that contains this variable.}\n\n\\item{min.size}{a positive integer that specifies the minimum size of a \ncluster (number of cells) for it to be used\n during the classification step.  Any clusters containing fewer than \n \\code{min.size} cells will be considered an outlier\n cluster and ignored in the classfication algorithm.  The default value\n  is three.}\n\n\\item{min.nonzero}{a positive integer that specifies the minimum number of\nnonzero cells in each condition required for the test of differential \ndistributions.  If a gene has fewer nonzero cells per condition, it will\nstill be tested for DZ (if \\code{testZeroes} is TRUE). Default value is\nNULL (no minimum value is enforced).}\n}\n\\value{\nA \\code{SummarizedExperiment} object that contains the data and \nsample information from the input object, but where the results objects\nare now added to the \\code{metadata} slot.  The metadata slot is now a\nlist with four items: the first (main results object) is a data.frame \nwith nine columns: \ngene name (matches rownames of SCdat), permutation p-value for testing of \nindependence of \n condition membership with clustering, Benjamini-Hochberg adjusted version \n of the previous column, p-value for test of difference in dropout rate\n  (only for non-DD genes), \n Benjamini-Hochberg adjusted version of the previous column, name of the \n DD (DE, DP, DM, DB) pattern or DZ (otherwise NS = not significant), the \n number of clusters identified overall, the number of clusters identified in \n condition 1 alone, and the number of clusters identified in condition \n 2 alone. The remaining three elements are matrices (first for condition\n  1 and 2 combined, \n then condition 1 alone, then condition 2 alone) that contains the cluster\n  memberships for each sample (cluster 1,2,3,...) in columns and\n genes in rows.  Zeroes, which are not involved in the clustering, are\n  labeled as zero.  See the \\code{results} function for a convenient\n  way to extract these results objects.\n}\n\\description{\nFind genes with differential distributions (DD) across two conditions\n}\n\\details{\nFind genes with differential distributions (DD) across two \nconditions.  Models each log-transformed gene as a Dirichlet \n  Process Mixture of normals and uses a permutation test to determine \n  whether condition membership is independent of sample clustering.\n  The FDR adjusted (Benjamini-Hochberg) permutation p-value is returned \n  along with the classification of each significant gene \n  (with p-value less than 0.05 (or 0.025 if also testing for a difference\n   in the proportion of zeroes)) into one of four categories \n  (DE, DP, DM, DB).  For genes that do not show significant influence, \n  of condition on clustering, an optional test of whether the \n  proportion of zeroes (dropout rate) is different across conditions is \n  performed (DZ).\n}\n\\examples{\n \n# load toy simulated example SummarizedExperiment to find DD genes\n\ndata(scDatExSim)\n\n\n# check that this object is a member of the SummarizedExperiment class\n# and that it contains 200 samples and 30 genes\n\nclass(scDatExSim)\nshow(scDatExSim)\n\n\n# set arguments to pass to scDD function\n# we will perform 100 permutations on each of the 30 genes\n\nprior_param=list(alpha=0.01, mu0=0, s0=0.01, a0=0.01, b0=0.01)\nnperms <- 100\n\n\n# call the scDD function to perform permutations, classify DD genes, \n# and return results\n# we won't perform the test for a difference in the proportion of zeroes  \n# since none exists in this simulated toy example data\n# this step will take significantly longer with more genes and/or \n# more permutations\n\nscDatExSim <- scDD(scDatExSim, prior_param=prior_param, permutations=nperms, \n            testZeroes=FALSE)\n}\n\\references{\nKorthauer KD, Chu LF, Newton MA, Li Y, Thomson J, Stewart R, \nKendziorski C. A statistical approach for identifying differential \ndistributions\nin single-cell RNA-seq experiments. Genome Biology. 2016 Oct 25;17(1):222. \n\\url{https://genomebiology.biomedcentral.com/articles/10.1186/s13059-016-\n1077-y}\n}\n\n",
    "created" : 1482160087511.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2107441571",
    "id" : "83A904F1",
    "lastKnownWriteTime" : 1482164146,
    "last_content_update" : 1482164146,
    "path" : "~/Desktop/scDD/man/scDD.Rd",
    "project_path" : "man/scDD.Rd",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_doc"
}